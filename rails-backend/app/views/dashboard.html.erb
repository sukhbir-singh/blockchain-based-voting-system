<!DOCTYPE html>
<html lang="en" >
<head>
  <meta charset="UTF-8">
  <title>Blockchain Voting App</title>
  <link rel='stylesheet prefetch' href='https://fonts.googleapis.com/css?family=Open+Sans:400,700,300,600'>
  <link rel="stylesheet" href="css/style.css">
  <link rel="stylesheet" href="css/voting.css">
  <script src="js/Chart.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/rollups/aes.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.9-1/sha1.js"></script>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/rollups/aes.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.9-1/sha1.js"></script>
  <script src="http://code.jquery.com/jquery-1.11.0.min.js"></script>
  <script src="https://cdn.jsdelivr.net/gh/ethereum/web3.js@develop/dist/web3.js"></script>
  <style>  
  #real_time_voting{
    position: relative;
    background: #fff;
    height: 50%;
    float:left;
    width: 50%;
  }

  #myChart{
    padding: 10px;
    position: relative;
  } 

  #user_information{
    position: relative;
    background: #ffa500b8;
    width: 480px;
    margin-left: 20px;
    float: left;
    height: 50%;
    padding-top: 30px;
  }

  #voting_history_div{
    background: #ffff00bf;
    position: relative;
    width: 480px;
    margin-left: 20px;
    float: left;
    margin-top: 10px;
    height: 240px;
  }

  .profile_info_title{
    text-transform: uppercase;
    text-decoration: none;
    font-size: 25px;
    margin-top: 10px;
  }

  .last_voted_title{
    margin-top: 80px;
    font-size: 25px;
    text-align:center;
    text-transform: uppercase;
  }

  #last_vote_text{
    text-align: center;
    margin-top: 50px;
  }

  #leader_name{
    font-size: 23px;
    /*color: #11730a;*/
  }

  #party_name{
    font-size: 20px;
    /*color: #599455;*/
  }

  .leader_name{
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    position: inline-block;
    max-width: 20px;
  }

  </style>
  <script src="js/blockchain.js"></script>
  
  <script type="text/javascript">

  web3 = new Web3(new Web3.providers.HttpProvider("http://localhost:8545"));
json_string='[{"constant":false,"inputs":[{"name":"_user_id","type":"string"},{"name":"_encryption_key_hash","type":"string"}],"name":"addUser","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_user_id","type":"string"},{"name":"_hash","type":"string"}],"name":"storeHash","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_user_id","type":"string"},{"name":"_link","type":"string"}],"name":"storeLink","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"totalUsers","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_user_id","type":"string"},{"name":"_encryption_key_hash","type":"string"}],"name":"retrieveLink","outputs":[{"name":"","type":"string"},{"name":"","type":"string"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_user_id","type":"string"},{"name":"_encryption_key_hash","type":"string"}],"name":"_isValid","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]';

abi = JSON.parse(json_string);
VotingContract = web3.eth.contract(abi)
var contractInstance = VotingContract.at(getDeployedAddress());
var encryption_key_hash="<%= @user.encryption_key.to_s %>";

// block chain work above this line

function last_voted_id(){
  var user_inc_id="<%= @user.inc_id.to_s %>";
  var encryption_key_hash="<%= @user.encryption_key.to_s %>";

  var array = contractInstance.retrieveLink.call(user_inc_id, encryption_key_hash);
  var dt = CryptoJS.AES.decrypt(array[0], encryption_key_hash);
  generated_id = dt.toString(CryptoJS.enc.Utf8);

  console.log("generated_id is: " + dt.toString(CryptoJS.enc.Utf8));  

  $.get('/last_vote_info', {generated_id: generated_id}, function(response){
    console.log(response);

    if(response.is_valid == true && response.leader_name.length>0){
      document.getElementById('not_voted_div').style.display='none';
      document.getElementById('voted_div').style.display='block';

      document.getElementById('leader_name').innerHTML=response.leader_name;
      document.getElementById('party_name').innerHTML=response.party_name;
    }
    
  });
}

function openVotePage(){
  if(encryption_key_hash.length>3){
    window.open("/vote","_self");  
  }else{
    alert('Please update your Profile first');
  }
  
}

window.onload = last_voted_id();

</script>
</head>
<body>
  <div class="cont_principal">
  <div class="cont_centrar_dashboard">
  	
  	<div id="real_time_voting">
      <canvas id="myChart" width="auto" height="280px"></canvas>
  	</div>

  	<div id="user_information">
  		<p class="profile_info_title">Profile Information</p><br>
  		<p>Full Name: <%= @user.full_name %></p>
  		<p>Adhaar: <%= @user.adhaar %></p>

      <div id="profile_btns">
        <form action="/logout" method="post">
          <button id="logout_btn" onclick="submit();">Logout</button>        
        </form>
        <form action="/profile">
          <button id="profile_edit_btn">Edit Profile</button>     
        </form>
      </div>

  	</div>
  	<div id="voting_history_div">
      <div id="not_voted_div">
  		<p style="margin-top: 70px;text-align:center;">You have not casted any vote yet.</p><br>
        <button id="vote_now_btn" onclick="openVotePage()">Vote Now!!</button>
      </div>

      <div style="display: none" id="voted_div">
       <p class="last_vote_title"></p><br>
          <p id="last_vote_text">Your Last Vote: <span id="leader_name">Leader 6</span> (<span id="party_name">BJP</span>)</p>
        <button id="update_vote_btn" onclick="openVotePage()">Update Your Vote</button>
      </div>
  	</div>
      
  </div>
  </div>

  <script>

  function draw(leaders){
    var ctx = document.getElementById("myChart").getContext('2d');
    var graph_data = leaders.graph_data;

    data = {
            labels: graph_data.leaders,

            datasets: [{
                label: '# of Votes',
                data: graph_data.leader_counts,
                backgroundColor: [
                    'rgba(255, 99, 132, 0.8)',
                    'rgba(54, 162, 235, 0.8)',
                    'rgba(255, 206, 86, 0.8)',
                    'rgba(75, 192, 192, 0.8)',
                    'rgba(153, 102, 255, 0.8)',
                    'rgba(255, 159, 64, 0.8)',
                    'rgba(255, 99, 132, 0.8)',
                    'rgba(54, 162, 235, 0.8)',
                    'rgba(255, 206, 86, 0.8)',
                    'rgba(75, 192, 192, 0.8)',
                    'rgba(153, 102, 255, 0.8)',
                    'rgba(255, 159, 64, 0.8)'
                ],
                borderColor: [
                    'rgba(255,99,132,1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)',
                    'rgba(255,99,132,1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)'
                ],
                borderWidth: 1
            }]
        };

    var myChart = new Chart(ctx, {
        type: 'pie',
        data: data,
        options: {
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero:true
                    }
                }]
            }
        }
    });  
  }

  function fetchAndDraw(){
    $.get('/all_votes', function(response){
      console.log(response);
      if(response.success == true){
        draw(response);
      }
      
    });
  }

  window.onload = fetchAndDraw();
  
  </script>

</body>
</html>